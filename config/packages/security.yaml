security:
    # SECTION DES PROVIDERS
    providers:
        users_in_memory:
            memory:
                users:
                    # On définit que nos utilisateurs sont ceux avec le badge 'api_user'
                    api_user:
                        # Ils s'authentifient sans mot de passe
                        password: null
                        # On leur assigne un rôle
                        roles: [ 'ROLE_API' ]

    # SECTION DES FIREWALLS
    firewalls:
        main:
            # On attrape toutes les requêtes entrantes sur l'appli
            pattern: ^/
            stateless: true
            provider: users_in_memory
            # On utilise notre authenticator custom pour gérer chacune d'entre elles
            custom_authenticators:
                - App\Security\ApiAuthenticator

    # SECTION DES ACCESS CONTROL
    access_control:
        # On limite toutes les ressources aux utilisateurs avec le rôle ROLE_API = utilisateurs authentifiés
        - { path: ^/, roles: ROLE_API }

when@test:
    security:
        password_hashers:
            # Réduction du coût de hashage pendant les tests (plus rapide)
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4        # Pour bcrypt
                time_cost: 3   # Pour argon
                memory_cost: 10 # Pour argon
